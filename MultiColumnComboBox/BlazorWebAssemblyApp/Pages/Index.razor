@page "/"

<SfMultiColumnComboBox Width="600px" @bind-Value="@Value" ValueField="Name" TextField="Name"
                       PopupHeight="350px" PopupWidth="600px" DataSource="@Products"
                       Placeholder="Select a game">
    <MultiColumnComboboxColumns>
        <MultiColumnComboboxColumn Field="Name" Width="200px"
                                   TextAlign="TextAlign.Center"></MultiColumnComboboxColumn>
        <MultiColumnComboboxColumn Field="Price" Width="200px"
                                   TextAlign="TextAlign.Center"></MultiColumnComboboxColumn>
        <MultiColumnComboboxColumn Field="Availability" Width="200px"
                                   TextAlign="TextAlign.Center"></MultiColumnComboboxColumn>
    </MultiColumnComboboxColumns>
</SfMultiColumnComboBox>

@code {

    public class Product
    {
        public string? Name { get; set; }
        public decimal Price { get; set; }
        public string? Availability { get; set; }
        public string? Category { get; set; }
        public double Rating { get; set; }
    }

    private string Value { get; set; } = "Tablet";

    private List<Product> Products = new List<Product>();

    protected override Task OnInitializedAsync()
    {
        Products = new List<Product>
        {
            new Product { Name = "Laptop", Price = 999.99m, Availability = "In Stock",
            Category = "Electronics", Rating = 4.5 },
            new Product { Name = "Smartphone", Price = 599.99m, Availability = "Out of Stock",
            Category = "Electronics", Rating = 4.3 },
            new Product { Name = "Tablet", Price = 299.99m, Availability = "In Stock",
            Category = "Electronics", Rating = 4.2 },
            new Product { Name = "Headphones", Price = 49.99m, Availability = "In Stock",
            Category = "Accessories", Rating = 4.0 }
        };
        return base.OnInitializedAsync();
    }
}

